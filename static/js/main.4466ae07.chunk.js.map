{"version":3,"sources":["store/actions/actionTypes.js","store/actions/burgerBuilder.js","store/actions/orders.js","store/actions/auth.js","components/UI/Input/Input.module.css","hoc/Auxiliary.js","components/Navigation/NavigationItems/NavigationItems.module.css","components/Burger/BurgerIngredients/BurgerIngredients.module.css","axios-orders.js","components/UI/Spinner/Spinner.js","components/UI/Button/Button.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControls.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","hoc/withErrorHandler/withErrorHandler.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Backdrop/Backdrop.module.css","components/UI/Modal/Modal.module.css","components/Layout/Layout.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/UI/Button/Button.module.css","containers/Auth/Auth.module.css","components/UI/Input/Input.js","components/UI/FormValidation/FormValidation.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Navigation/Toolbar/Menu/Menu.module.css","components/Burger/Burger.module.css","components/UI/Spinner/Spinner.module.css","serviceWorker.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/Menu/Menu.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","hoc/asyncComponent.js","components/Layout/Layout.js","App.js","store/reducers/ingReducer.js","store/reducers/priceReducer.js","store/reducers/orderReducer.js","store/reducers/authReducer.js","index.js"],"names":["ADD_ING","DEL_ING","CHANGE_PRICE","RESET","RESET_ING","RESET_PRICE","FETCH_ING","FETCH_ERROR","SUBMIT_ORDER","ERROR","LOADER","FETCH_ORDERS","AUTH_HANDLER","LOGIN_ERROR_STATE","AUTH_LOGOUT","addIng","ing","type","actionTypes","delIng","changePrice","act","reset","resetIng","resetPrice","fetchIng","dispatch","axios","get","then","response","data","catch","error","errorHandler","loader","x","submitForm","order","redirect","getState","post","auth","token","id","storingForm","name","fetchOrders","orders","queryParams","userID","key","push","storingOrders","loginErrorHandler","authDataStore","authLogout","localStorage","removeItem","authLogoutHandler","time","setTimeout","loginSuccess","refreshToken","expiresIn","keepLoggedIn","expirationDate","Date","getTime","setItem","actionCreators","authHandler","email","password","loginMode","authData","returnSecureToken","url","idToken","localId","message","keepMeLoggedIn","grant_type","refresh_token","getItem","console","log","id_token","user_id","expires_in","autoAuthHandler","module","exports","Auxiliary","props","children","instance","create","baseURL","Spinner","className","classes","Loader","Button","btnType","join","onClick","click","disabled","withErrorHandler","WrappedComponent","useState","setError","reqInterceptor","interceptors","request","use","resInterceptor","Promise","reject","useEffect","show","modalClosed","Backdrop","in","timeout","mountOnEnter","unmountOnExit","classNames","enterActive","BackdropOpen","exitActive","BackdropClose","React","memo","Fragment","OpenModal","CloseModal","Modal","prevProps","nextProps","Input","inputEl","validationMsg","inputClasses","InputEl","invalid","touched","Invalid_border","Invalid_text","style","color","margin","fontSize","elementConfig","placeholder","elementType","value","onChange","change","Select","Label","label","options","map","current","Radio","checkValidity","rules","isValid","required","trim","minLength","length","maxLength","emailCheck","search","reduce","acc","curr","connect","ingredients","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Burger","newIng","Object","keys","this","Array","index","toLowerCase","concat","renderIng","Component","Boolean","window","location","hostname","match","Logo","height","marginBottom","href","src","burgerLogo","alt","NavigationItem","isSideDrawer","width","state","isAuth","textDecoration","loginHandler","to","activeClassName","active","clicked","NavigationItems","NavigationItemsM","exact","Menu","Toolbar","DesktopOnly","SideDrawer","newClasses","Close","toggle","Open","BuildControl","Less","remove","isDisabled","More","add","BuildControls","control","changeIngHandler","fontFamily","price","toFixed","ResetButton","OrderButton","ordernow","modal","OrderSummary","ingSumm","orderSummary","cancel","continue","BurgerBuilder","modalHandler","setState","continueHandler","history","updatedIng","disabledInfo","burger","ordernowToggle","totalPrice","Auth","formIsValid","loginForm","keepMeLoggedin","changeHandler","event","validation","valid","target","updatedForm","configType","configText","form","config","textAlign","authRedirect","Login","padding","Logout","AsyncComponent","importedComponent","component","default","Comp","AsyncCheckout","AsyncOrders","backdropToggle","setBackdropToggle","backdropHandler","route","path","Context","App","initialState","reducer","action","store","assign","forEach","ingPrice","errorMessageHandler","errorMessage","rootReducer","combineReducers","ingReducer","priceReducer","orderReducer","authReducer","composeEnhancers","compose","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4466ae07.chunk.js","sourcesContent":["\r\n// Basic actions in Burger Builder\r\nexport const ADD_ING = 'ADD_ING';\r\nexport const DEL_ING = 'DEL_ING';\r\nexport const CHANGE_PRICE = 'CHANGE_PRICE';\r\nexport const RESET = 'RESET';\r\nexport const RESET_ING = 'RESET_ING';\r\nexport const RESET_PRICE = 'RESET_PRICE';\r\n\r\n// Initializing Burger Builder\r\nexport const FETCH_ING = 'FETCH_ING';\r\nexport const FETCH_ERROR = 'FETCH_ERROR';\r\n\r\n// Submitting Orders\r\nexport const SUBMIT_ORDER = 'SUBMIT_ORDER';\r\n\r\n// UI manipulators\r\nexport const ERROR = 'ERROR';\r\nexport const LOADER = 'LOADER';\r\n\r\n// Fetching Orders\r\nexport const FETCH_ORDERS = 'FETCH_ORDERS';\r\n\r\n// Authentication Handler\r\nexport const AUTH_HANDLER = 'AUTH_HANDLER';\r\nexport const LOGIN_ERROR_STATE = 'LOGIN_ERROR_STATE';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIng = ing => {\r\n    return {\r\n        type: actionTypes.ADD_ING,\r\n        ing\r\n    }\r\n}\r\n\r\nexport const delIng = ing => {\r\n    return {\r\n        type: actionTypes.DEL_ING,\r\n        ing\r\n    }\r\n}\r\n\r\nexport const changePrice = (ing,act) => {\r\n    return {\r\n        type: actionTypes.CHANGE_PRICE,\r\n        ing,\r\n        act\r\n    }\r\n}\r\n\r\nexport const reset = () => {\r\n    return {\r\n        type: actionTypes.RESET,\r\n    }\r\n}\r\n\r\nexport const resetIng = () => {\r\n    return {\r\n        type: actionTypes.RESET_ING,\r\n    }\r\n}\r\n\r\nexport const resetPrice = () => {\r\n    return {\r\n        type: actionTypes.RESET_PRICE,\r\n    }\r\n}\r\n\r\nconst storeIng = (data) => {\r\n    return {\r\n        type: actionTypes.FETCH_ING,\r\n        data\r\n    }\r\n}\r\n\r\nconst errorHandler = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ERROR\r\n    }\r\n}\r\n\r\nexport const fetchIng = () => {\r\n    return dispatch => {\r\n\r\n        axios.get('/ingredients.json')\r\n            .then(response => {\r\n                dispatch(storeIng(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(errorHandler());\r\n            });\r\n    }\r\n}","import axios from '../../axios-orders';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const errorHandler = () => {\r\n    return {\r\n        type: actionTypes.ERROR,\r\n        error: true\r\n    }\r\n}\r\n\r\nexport const loader = (x) => {\r\n    return {\r\n        type: actionTypes.LOADER,\r\n        loader: x\r\n    }\r\n}\r\n\r\nconst storingForm = (id, order) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_ORDER,\r\n        id,\r\n        order\r\n    }\r\n};\r\n\r\nexport const submitForm = (order, redirect) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        dispatch(loader(true));\r\n        axios.post('/orders.json?auth=' + getState().auth.token, order)\r\n            .then((response) => {\r\n                dispatch(storingForm(response.data.name, order));\r\n                redirect();\r\n            })\r\n            .catch(error => {\r\n                dispatch(errorHandler());\r\n            })\r\n    }\r\n};\r\n\r\nconst storingOrders = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS,\r\n        orders\r\n    }\r\n}\r\n\r\nexport const fetchOrders = () => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        dispatch(loader(true));\r\n\r\n        let orders = [];\r\n        let queryParams = '?auth=' + getState().auth.token + '&orderBy=\"userID\"&equalTo=\"' + getState().auth.userID + '\"';\r\n        axios.get('/orders.json' + queryParams)\r\n            .then(response => {\r\n                for (let key in response.data) {\r\n                    orders.push({\r\n                        ...response.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                dispatch(storingOrders(orders));\r\n            })\r\n            .catch(error => {\r\n                dispatch(errorHandler());\r\n            })\r\n    }\r\n}","import axios from 'axios';\r\nimport * as actionTypes from './actionTypes';\r\nimport * as actionCreators from '../actions';\r\n\r\nexport const loginErrorHandler = (error) => {\r\n    return {\r\n        type: actionTypes.LOGIN_ERROR_STATE,\r\n        error\r\n    }\r\n}\r\n\r\nconst authDataStore = (token, userID) => {\r\n    return {\r\n        type: actionTypes.AUTH_HANDLER,\r\n        token,\r\n        userID\r\n    }\r\n}\r\n\r\nconst authLogout = () => {\r\n    // console.log('[logged-out]');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userID');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('refreshToken');\r\n    localStorage.removeItem('keepLoggedIn');\r\n\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const authLogoutHandler = (time) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(authLogout());\r\n        }, time * 1000);\r\n    }\r\n}\r\n\r\nconst loginSuccess = (token, userID, refreshToken, expiresIn, keepLoggedIn) => {\r\n    return dispatch => {\r\n        // To convert 'expiresIn' seconds to milli-seconds and THEN adding it to 'new Date().getTime()' (which also returns current time in milli-seconds)\r\n        const expirationDate = new Date(new Date().getTime() + (expiresIn * 1000));\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('userID', userID);\r\n        localStorage.setItem('refreshToken', refreshToken);\r\n        localStorage.setItem('expirationDate', expirationDate);\r\n        localStorage.setItem('keepLoggedIn', keepLoggedIn);\r\n        dispatch(actionCreators.loader(false));\r\n        dispatch(authDataStore(token, userID));\r\n        dispatch(loginErrorHandler(null));\r\n        dispatch(authLogoutHandler(expiresIn));\r\n    }\r\n}\r\n\r\nexport const authHandler = (email, password, loginMode, keepLoggedIn) => {\r\n    return dispatch => {\r\n        dispatch(actionCreators.loader(true));\r\n\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        };\r\n\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDk3K1lHEAHx4sO2BGy2U509Nj4Itr1E-4';\r\n        if (loginMode === 'login') url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDk3K1lHEAHx4sO2BGy2U509Nj4Itr1E-4';\r\n\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                // console.log(response.data);\r\n                dispatch(loginSuccess(\r\n                    response.data.idToken, \r\n                    response.data.localId, \r\n                    response.data.refreshToken, \r\n                    response.data.expiresIn,\r\n                    keepLoggedIn\r\n                ));\r\n            })\r\n            .catch(error => {\r\n                dispatch(actionCreators.loader(false));\r\n                dispatch(loginErrorHandler(error.response.data.error.message));\r\n                // console.log(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nconst keepLoggedIn = (keepMeLoggedIn) => {\r\n    return dispatch => {\r\n        const authData = {\r\n            grant_type: \"refresh_token\",\r\n            refresh_token: localStorage.getItem('refreshToken')\r\n        }\r\n        axios.post('https://securetoken.googleapis.com/v1/token?key=AIzaSyDk3K1lHEAHx4sO2BGy2U509Nj4Itr1E-4', authData)\r\n            .then(response => {\r\n                // console.log(response.data);\r\n                console.log('[tokken re-instated]');\r\n                dispatch(loginSuccess(\r\n                    response.data.id_token, \r\n                    response.data.user_id, \r\n                    response.data.refresh_token, \r\n                    response.data.expires_in,\r\n                    keepMeLoggedIn\r\n                ));\r\n            })\r\n            .catch(error => {\r\n                dispatch(actionCreators.loader(false));\r\n                dispatch(loginErrorHandler(error.response.data.error.message));\r\n                console.log(error.response.data.error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport const autoAuthHandler = () => {\r\n    return dispatch => {\r\n        let token = localStorage.getItem('token');\r\n        let keepMeLoggedIn = localStorage.getItem('keepLoggedIn');\r\n        if (token) {\r\n            let expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate > new Date()) {\r\n                // console.log(\"[localStorage] using token\");\r\n                let userID = localStorage.getItem('userID');\r\n                dispatch(authDataStore(token, userID));\r\n                dispatch(authLogoutHandler((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n            }\r\n            else {\r\n                // console.log('expirationDate mismatch error');\r\n                keepMeLoggedIn === 'yes' ? dispatch(keepLoggedIn(keepMeLoggedIn)) : dispatch(authLogout());\r\n            }\r\n        }\r\n        else {\r\n            // console.log('token not found');\r\n            keepMeLoggedIn === 'yes' ? dispatch(keepLoggedIn(keepMeLoggedIn)) : dispatch(authLogout());\r\n        }\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__12jny\",\"Label\":\"Input_Label__1zvL5\",\"InputEl\":\"Input_InputEl__OMffR\",\"Select\":\"Input_Select__JHBvB\",\"Radio\":\"Input_Radio__2xBHN\",\"Invalid_border\":\"Input_Invalid_border__1u5oF\",\"Invalid_text\":\"Input_Invalid_text__1S9PH\"};","export const Auxiliary = (props) => props.children;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1pFF6\",\"NavigationItemsM\":\"NavigationItems_NavigationItemsM__2xVMV\",\"active\":\"NavigationItems_active__2sP8j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__3exOr\",\"BreadTop\":\"BurgerIngredients_BreadTop__2yj7Z\",\"Seeds1\":\"BurgerIngredients_Seeds1__2sanp\",\"Seeds2\":\"BurgerIngredients_Seeds2__1lC_Z\",\"Meat\":\"BurgerIngredients_Meat__2R9xp\",\"Cheese\":\"BurgerIngredients_Cheese__1UXwd\",\"Salad\":\"BurgerIngredients_Salad__3squ_\",\"Bacon\":\"BurgerIngredients_Bacon__Yfb0z\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-burger-builder-11.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nexport const Spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);","import React from 'react';\r\nimport classes from './Button.module.css'\r\n\r\nexport const Button = (props) => (\r\n    <button\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.click}\r\n        disabled={props.disabled}\r\n    >\r\n        {props.children}\r\n    </button>\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__26Cwy\",\"Open\":\"SideDrawer_Open__1W0j7\",\"Close\":\"SideDrawer_Close__1Kcmb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1fbhY\",\"OrderButton\":\"BuildControls_OrderButton__16910\",\"inline\":\"BuildControls_inline__hsd6X\",\"enable\":\"BuildControls_enable__1YETK\",\"ResetButton\":\"BuildControls_ResetButton__1zxyY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3a5HI\",\"Label\":\"BuildControl_Label__h5DPY\",\"Less\":\"BuildControl_Less__1al-L\",\"More\":\"BuildControl_More__1TMx6\"};","/////////////////////////////// FUNCTIONAL COMPONENT ////////////////////////////////////\r\n// Have to use Functional Component here because componentWillUpdate() is deprecated.\r\n\r\nimport React, {useEffect, useState} from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport {Auxiliary} from '../Auxiliary';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    const WithErrorHandler = props => {\r\n\r\n        const [error, setError] = useState(null);\r\n\r\n        const reqInterceptor = axios.interceptors.request.use(request => {\r\n            setError(null);\r\n            return request;\r\n        });\r\n        const resInterceptor = axios.interceptors.response.use(response => response, error => {\r\n            setError(error);\r\n            return Promise.reject(error);\r\n        });\r\n\r\n        useEffect (() => {\r\n            return () => {\r\n                // axios.interceptors.request.eject(reqInterceptor);\r\n                // axios.interceptors.response.eject(resInterceptor);\r\n            };\r\n        }, [reqInterceptor, resInterceptor]);\r\n\r\n        return (\r\n            <Auxiliary>\r\n                <WrappedComponent {...props} />\r\n                <Modal show={error} modalClosed={() => setError(null)}>\r\n                    {error ? error.message : null}\r\n                </Modal>\r\n            </Auxiliary>\r\n        );\r\n    };\r\n    return WithErrorHandler;\r\n};\r\n\r\nexport default withErrorHandler;\r\n\r\n\r\n/////////////////////////////// CLASS-BASED COMPONENT ////////////////////////////////////\r\n// Here componentWillMount() is used which is no longer used in React.\r\n\r\n// import React, {Component} from 'react';\r\n// import Modal from '../../components/UI/Modal/Modal';\r\n// import { Auxiliary } from '../Auxiliary';\r\n\r\n// export const withErrorHandler = (WrappedComponent, axios) => {\r\n//     return class extends Component {\r\n        \r\n//         state = {\r\n//             error: null\r\n//         }\r\n\r\n//         componentWillMount () {\r\n//             axios.interceptors.request.use(request => {\r\n//                 this.setState({error: null});\r\n//                 return request;\r\n//             });\r\n//             axios.interceptors.response.use(response => response, error => {\r\n//                 this.setState({error: error});\r\n//                 return Promise.reject(error);\r\n//             });\r\n//         }\r\n\r\n//         modalClosedHandler = () => {\r\n//             this.setState({error: null});\r\n//         }\r\n\r\n//         render () {\r\n//             return (\r\n//                 <Auxiliary>\r\n//                     <WrappedComponent {...this.props} />\r\n//                     <Modal show={this.state.error} modalClosed={this.modalClosedHandler}>\r\n//                         {this.state.error ? this.state.error.message : null}\r\n//                     </Modal>\r\n//                 </Auxiliary>\r\n//             );\r\n//         }\r\n//     }\r\n// }","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nexport const Backdrop = (props) => {\r\n\r\n    // const classX = [\r\n    //     classes.Backdrop,\r\n    //     props.show === \"entering\" ? classes.BackdropOpen \r\n    //     : props.show === \"exiting\" ? classes.BackdropClose : null\r\n    // ]; \r\n\r\n    // if (props.show) \r\n    \r\n    return (\r\n        <CSSTransition\r\n            in={props.show}\r\n            timeout={300}\r\n            mountOnEnter\r\n            unmountOnExit\r\n            classNames={{\r\n                enterActive: classes.BackdropOpen,\r\n                exitActive: classes.BackdropClose\r\n            }}\r\n        >\r\n            <div\r\n                className={classes.Backdrop}\r\n                onClick={props.modalClosed}\r\n            >\r\n            </div>\r\n        </CSSTransition>\r\n    );\r\n\r\n    // else return null;\r\n\r\n\r\n}","import React from 'react';\r\nimport classes from './Modal.module.css';\r\nimport { Backdrop } from '../Backdrop/Backdrop';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst Modal = (props) => {\r\n\r\n    // const classX = [classes.Modal, \r\n    //     props.show === \"entering\" ? classes.OpenModal\r\n    //     : props.show === \"exiting\" ? classes.CloseModal : null\r\n    // ]\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n\r\n            <Backdrop\r\n                modalClosed={props.modalClosed}\r\n                show={props.show}\r\n            />\r\n\r\n            <CSSTransition\r\n                in={props.show}\r\n                timeout={300}\r\n                mountOnEnter\r\n                unmountOnExit\r\n                classNames={{\r\n                    enterActive: classes.OpenModal,\r\n                    exitActive: classes.CloseModal\r\n                }}\r\n            >\r\n\r\n                <div\r\n                    className={classes.Modal}\r\n                    // style={{\r\n                        // transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        // opacity: props.show ? '1' : '0'\r\n                    // }}\r\n                >\r\n                    {props.children}\r\n                </div>\r\n\r\n            </CSSTransition>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst shouldComponentUpdate = (prevProps, nextProps) => {\r\n    return prevProps.show === nextProps.show && prevProps.children === nextProps.children;\r\n}\r\n\r\nexport default React.memo(Modal, shouldComponentUpdate);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__B2Jrp\",\"BackdropOpen\":\"Backdrop_BackdropOpen__2kWrG\",\"OpenBackdrop\":\"Backdrop_OpenBackdrop__1l8RL\",\"BackdropClose\":\"Backdrop_BackdropClose__3BZW7\",\"CloseBackdrop\":\"Backdrop_CloseBackdrop__22WAz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1uxwJ\",\"OpenModal\":\"Modal_OpenModal__1NBiH\",\"ModalOpen\":\"Modal_ModalOpen__1d9xl\",\"CloseModal\":\"Modal_CloseModal__hi0_b\",\"ModalClosed\":\"Modal_ModalClosed__19ibx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Context\":\"Layout_Context__MLxCd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3ZhYe\",\"DesktopOnly\":\"Toolbar_DesktopOnly__36T2l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__SRs1E\",\"Success\":\"Button_Success__2W3Bp\",\"Danger\":\"Button_Danger__Fonfb\",\"enable\":\"Button_enable__3itDw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Auth_Login__346w1\",\"Button\":\"Auth_Button__2D_st\"};","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nexport const Input = (props) => {\r\n    \r\n    let inputEl = null;\r\n    let validationMsg = null;\r\n    const inputClasses = [classes.InputEl];\r\n    if((props.invalid && props.touched) || props.error) {\r\n        inputClasses.push(classes.Invalid_border, classes.Invalid_text);\r\n        validationMsg = <p style={{color: 'red', margin: '5px 0', fontSize: 'x-large'}}>please enter a valid {props.elementConfig.placeholder}</p>;\r\n    }\r\n    \r\n    switch (props.elementType) {\r\n        \r\n        case 'input':\r\n            inputEl = ( \r\n                <div>\r\n                    {validationMsg}\r\n                    <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} onChange={props.change} />\r\n                </div>\r\n            );      \r\n            break;\r\n\r\n        case 'textarea':\r\n            inputEl = (\r\n                <div>\r\n                    {validationMsg}\r\n                    <textarea className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} onChange={props.change} />\r\n                </div>\r\n            );\r\n            break;\r\n\r\n        case 'select' :\r\n            inputClasses[0] = classes.Select;\r\n            inputClasses.push(props.touched ? null : classes.Invalid_text);\r\n            // inputClasses.push(props.touched ? null : classes.Invalid);\r\n            inputEl = (\r\n                <div>\r\n                    <label className={classes.Label}>{props.label}</label>\r\n                    <select className={inputClasses.join(' ')} value={props.value} onChange={props.change} > \r\n                        {props.elementConfig.options.map(current => (\r\n                            <option key={current.value} value={current.value} name={props.label}>\r\n                                {current.value}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            );\r\n            break;\r\n\r\n        case 'radio' :\r\n            inputClasses[0] = classes.Radio;\r\n            inputClasses.push(props.touched ? null : classes.Invalid_text);\r\n            inputEl = (\r\n                <div>\r\n                    <label className={classes.Label}>{props.label}</label>\r\n                    {props.elementConfig.options.map(current => (\r\n                        <div key={current.value} className={inputClasses.join(' ')}>\r\n                            <input \r\n                                type={props.elementType}\r\n                                name={props.label}\r\n                                value={current.value}\r\n                                onChange={props.change}\r\n                            /> {current.value}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            );\r\n            break;\r\n\r\n        case 'checkbox' :\r\n            inputClasses[0] = classes.Radio;\r\n            inputClasses.push(props.touched ? null : classes.Invalid_text);\r\n            inputEl = (\r\n                <div>\r\n                    <label className={classes.Label}>{props.label}</label>\r\n                    {props.elementConfig.options.map(current => (\r\n                        <div key={current.value} className={inputClasses.join(' ')}>\r\n                            <input \r\n                                type={props.elementType} \r\n                                name={props.label}\r\n                                value={current.value}\r\n                                onChange={props.change}\r\n                            /> {current.value}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            );\r\n            break;\r\n            \r\n        default: \r\n            inputEl = (\r\n                <div>\r\n                    {validationMsg}\r\n                    <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} onChange={props.change} />\r\n                </div>\r\n            );\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.Input}>\r\n            {inputEl}\r\n        </div>\r\n    );\r\n}","export const checkValidity = (value, rules) => {\r\n\r\n    //--------- Max's Method ---------\r\n\r\n    // let isValid = true;\r\n    // if(rules.required) {\r\n    //     isValid = value.trim() !== '' && isValid;\r\n    // }\r\n\r\n    // if(rules.minLength) {\r\n    //     isValid = value.length >= minLength && isValid; // 2 >= 3 -> false\r\n    // }\r\n\r\n    // if(rules.maxLength) {\r\n    //     isValid = value.length <= maxLength && isValid;\r\n    // }\r\n\r\n    // return isValid;\r\n\r\n\r\n    //--------- The Karan Uppal's Method ---------\r\n\r\n    let isValid = [];\r\n    if (rules.required) {\r\n        isValid.push(value.trim() !== '');\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid.push(value.trim().length >= rules.minLength); // 2 >= 3 -> false\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid.push(value.trim().length <= rules.maxLength);\r\n    }\r\n\r\n    if (rules.emailCheck) {\r\n        isValid.push(value.search('@') > -1);\r\n    }\r\n\r\n    return isValid.reduce((acc, curr) => {\r\n        return acc && curr;\r\n    });\r\n\r\n    // return isValid.find(el => el === false) > -1 ? false : true;;\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classes from './BurgerIngredients.module.css'\r\nimport PropTypes from 'prop-types';\r\nimport * as actionCreators from '../../../store/actions';\r\n\r\nconst BurgerIngredients = (props) => {\r\n\r\n    const delIng = (ing) => {\r\n        props.delIng(ing);\r\n        props.changePrice(ing, 'rem');\r\n    };\r\n\r\n    let ingredients = null;\r\n    switch (props.type) {\r\n        case ('bread-bottom'):\r\n            ingredients = <div className={classes.BreadBottom}></div>\r\n            break;\r\n        case ('bread-top'):\r\n            ingredients = (<div className={classes.BreadTop}>\r\n                <div className={classes.Seeds1}></div>\r\n                <div className={classes.Seeds2}></div>\r\n            </div>);\r\n            break;\r\n        case ('meat'):\r\n            ingredients = <div\r\n                className={classes.Meat}\r\n                onClick={() => delIng('Meat')}\r\n            ></div>\r\n            break;\r\n        case ('cheese'):\r\n            ingredients = <div\r\n                className={classes.Cheese}\r\n                onClick={() => delIng('Cheese')}\r\n            ></div>\r\n            break;\r\n        case ('salad'):\r\n            ingredients = <div\r\n                className={classes.Salad}\r\n                onClick={() => delIng('Salad')}\r\n            ></div>\r\n            break;\r\n        case ('bacon'):\r\n            ingredients = <div\r\n                className={classes.Bacon}\r\n                onClick={() => delIng('Bacon')}\r\n            ></div>\r\n            break;\r\n        default: ingredients = null;\r\n    }\r\n    return ingredients;\r\n};\r\n\r\nBurgerIngredients.propTypes = {\r\n    type: PropTypes.string\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        delIng: (ing) => dispatch(actionCreators.delIng(ing)),\r\n        changePrice: (ing, act) => dispatch(actionCreators.changePrice(ing, act))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(BurgerIngredients);","import React, { Component } from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients';\r\n\r\nclass Burger extends Component {\r\n\r\n    renderIng() {\r\n        let newIng = Object.keys(this.props.ing)\r\n            .map((current) => {\r\n                return [...Array(this.props.ing[current])].map((curr, index) => {\r\n                    return <BurgerIngredients\r\n                        key={current + index}\r\n                        type={current.toLowerCase()}\r\n                    />\r\n                });\r\n            })\r\n            .reduce((acc, curr) => {\r\n                return acc.concat(curr);\r\n            }, []);\r\n\r\n        if (newIng.length === 0) return <p>add some ingredients!</p>;\r\n        else return newIng;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Burger}>\r\n                <BurgerIngredients type=\"bread-top\" />\r\n                {this.renderIng()}\r\n                <BurgerIngredients type=\"bread-bottom\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Burger;","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__52sxG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2mYe_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu_Menu__3izzy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2c79j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1eIYT\",\"load6\":\"Spinner_load6__sKIKi\",\"round\":\"Spinner_round__2co0L\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nexport const Logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height, marginBottom: props.marginBottom}}>\r\n        {/* <a href=\"https://killswitch74.github.io/burger-builder\"> */}\r\n        <a href=\"/\">\r\n            <img src={burgerLogo} alt=\"Burger Builder\" />\r\n            &nbsp;Burger Builder\r\n        </a>\r\n    </div>\r\n);","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\n\r\nexport const NavigationItem = (props) => {\r\n\r\n    return (\r\n    <li className={classes.NavigationItem} style={props.isSideDrawer ? {width: '100%' } : {width: 'auto'}}>\r\n        {props.children}\r\n    </li>\r\n    );\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './NavigationItems.module.css';\r\nimport { NavigationItem } from './NavigationItem/NavigationItem'\r\n\r\n\r\nexport const NavigationItems = (props) => {\r\n    const style = { textDecoration: 'none' }\r\n\r\n    let loginHandler = (\r\n        <NavLink to=\"/login\" style={style} activeClassName={classes.active} >\r\n            <NavigationItem isSideDrawer={props.isSideDrawer}>Login</NavigationItem>\r\n        </NavLink>\r\n    );\r\n    if (props.isAuth) {\r\n        loginHandler = (\r\n            <NavLink to=\"/logout\" style={style} activeClassName={classes.active} >\r\n                <NavigationItem isSideDrawer={props.isSideDrawer}>Logout</NavigationItem>\r\n            </NavLink>\r\n        );\r\n    }\r\n    return (\r\n        <div onClick={props.clicked}>\r\n            <nav className={classes.NavigationItems} style={{ fontSize: 32 }}>\r\n                <ul className={props.isSideDrawer ? classes.NavigationItemsM : classes.NavigationItems}>\r\n                    <NavLink to=\"/\" exact style={style} activeClassName={classes.active} >\r\n                        <NavigationItem isSideDrawer={props.isSideDrawer}>Build a Burger</NavigationItem>\r\n                    </NavLink>\r\n\r\n                    {props.isAuth\r\n                        ? <NavLink to=\"/checkout\" style={style} activeClassName={classes.active} >\r\n                            <NavigationItem isSideDrawer={props.isSideDrawer}>Checkout</NavigationItem>\r\n                        </NavLink>\r\n                        : null\r\n                    }\r\n\r\n                    {props.isAuth\r\n                        ? <NavLink to=\"/orders\" style={style} activeClassName={classes.active} >\r\n                            <NavigationItem isSideDrawer={props.isSideDrawer}>My Orders</NavigationItem>\r\n                        </NavLink>\r\n                        : null\r\n                    }\r\n\r\n                    {loginHandler}\r\n\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.token !== null\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavigationItems);","import React from 'react';\r\nimport classes from './Menu.module.css';\r\nimport {FiMenu} from 'react-icons/fi';\r\n\r\nexport const Menu = (props) => <FiMenu className={classes.Menu} onClick={props.click} />;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport {Logo} from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport { Menu } from './Menu/Menu';\r\n\r\nexport const Toolbar = (props) => {\r\n\r\n    return (\r\n        <header className={classes.Toolbar}>\r\n            <Menu click={props.click} />\r\n            \r\n            <Logo height=\"55px\"/>\r\n            \r\n            <div className={classes.DesktopOnly}>    \r\n                <NavigationItems />\r\n            </div>\r\n        </header>\r\n    );  \r\n};","import React from 'react';\r\nimport classes from './SideDrawer.module.css';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport { Logo } from '../../Logo/Logo';\r\nimport { Backdrop } from '../../UI/Backdrop/Backdrop';\r\nimport { Auxiliary } from '../../../hoc/Auxiliary';\r\n\r\nexport const SideDrawer = (props) => {\r\n    \r\n    let newClasses = [classes.SideDrawer, classes.Close];\r\n    if(props.toggle) newClasses = [classes.SideDrawer, classes.Open];\r\n\r\n    return (\r\n        <Auxiliary>\r\n\r\n            <Backdrop show={props.toggle} modalClosed={props.click} />\r\n\r\n            <div className={newClasses.join(' ')}>\r\n                <Logo height=\"55px\" marginBottom=\"25px\" />\r\n                <NavigationItems clicked={props.click} isSideDrawer />\r\n            </div>\r\n        </Auxiliary>\r\n    );\r\n}","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nexport const BuildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n            <button\r\n            className={classes.Less}\r\n            onClick={props.remove}\r\n            disabled={props.isDisabled}\r\n            >less.</button>\r\n\r\n            <button\r\n            className={classes.More}\r\n            onClick={props.add}\r\n            >more.</button>\r\n    </div>\r\n);","import React from 'react';\r\nimport classes from './BuildControls.module.css'\r\nimport {BuildControl} from './BuildControl/BuildControl';\r\n\r\nexport const BuildControls = (props) => {\r\n    \r\n    let control = Object.keys(props.ing)\r\n        .map((current, index) => {\r\n            return <BuildControl\r\n                key={current + index}\r\n                label={current}\r\n                type={current.toLowerCase()}\r\n                add={() => props.changeIngHandler(current, 'add')}\r\n                remove={() => props.changeIngHandler(current, 'remove')}\r\n                isDisabled={props.isDisabled[current]}\r\n                />\r\n    });\r\n\r\n    return (\r\n    <div className={classes.BuildControls} style={{fontFamily: 'Amatic SC', fontSize: 28}}>\r\n        {props.price > 2 ? <p style={{fontSize: 38, margin: '4px'}}>Total: <strong>{props.price.toFixed(2)}$</strong></p> : null}\r\n        \r\n        {control}\r\n        \r\n        <div>\r\n            <button\r\n                className={[classes.ResetButton, classes.OrderButton].join(' ')}\r\n                disabled={!props.ordernow}\r\n                onClick={props.reset}\r\n            >RESET\r\n            </button>\r\n            <button \r\n                className={classes.OrderButton}\r\n                disabled={!props.ordernow}\r\n                onClick={props.modal}\r\n            >ORDER\r\n            </button>\r\n        </div>\r\n    \r\n    </div>\r\n    );\r\n};","import React, { Component } from 'react';\r\nimport { Button } from '../../UI/Button/Button'\r\n\r\nexport class OrderSummary extends Component {\r\n\r\n    // Converted to Class-based Component for Performance Tweak.\r\n    // Following Function will TRIGGER if this component is RE-RENDERED.\r\n    // componentDidUpdate() {\r\n    //     console.log('[OrderSummary.js]');\r\n    // }\r\n\r\n    render() {\r\n\r\n        let ingSumm = Object.keys(this.props.ingredients).map((current, index) => {\r\n            if (this.props.ingredients[current] !== 0) {\r\n                return <li key={current + index}>\r\n                    {current}: {this.props.ingredients[current]}\r\n                </li>\r\n            }\r\n            else return null;\r\n        });\r\n\r\n        let orderSummary = (\r\n            <div>\r\n                <h1 style={{ fontSize: 44 }}>Your Order Summary:</h1>\r\n                <p style={{ fontSize: 24 }}>with all these tasty ingredients...</p>\r\n                <ul style={{ fontSize: 28 }}>\r\n                    {ingSumm}\r\n                </ul>\r\n                <p style={{ fontSize: 24, fontFamily: 'Ubuntu Condensed' }}>Total: {this.props.price.toFixed(2)}$</p>\r\n            </div>\r\n        )\r\n\r\n        if (!this.props.isAuth) {\r\n            orderSummary = <p style={{ fontSize: 38 }}>you gotta sign-in to continue</p>;\r\n        }\r\n\r\n        return (\r\n\r\n            <div>\r\n\r\n                {orderSummary}\r\n\r\n                <Button btnType=\"Danger\" click={this.props.cancel}><span style={{ fontSize: 36 }}>Cancel</span></Button>\r\n                <Button btnType=\"Success\" click={this.props.continue}>\r\n                    <span style={{ fontSize: 36 }}>\r\n                        {this.props.isAuth ? 'Continue' : 'Sign-in'}\r\n                    </span>\r\n                </Button>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actionCreators from '../../store/actions';\r\nimport axios from '../../axios-orders';\r\n\r\nimport { Auxiliary } from '../../hoc/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport { BuildControls } from '../../components/Burger/BuildControls/BuildControls';\r\nimport { OrderSummary } from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport { Spinner } from '../../components/UI/Spinner/Spinner';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n// import BackdropContext from '../../context/backdrop-context';\r\n\r\nexport class BurgerBuilder extends Component {\r\n    state = {\r\n        modal: null,\r\n    }\r\n\r\n    // static contextType = BackdropContext;\r\n\r\n    componentDidMount() {\r\n        //Managing state through Redux\r\n        this.props.resetIng();  // Used instead of RESET() as to show spinner at component re-load\r\n        this.props.resetPrice();\r\n        this.props.fetchIng();\r\n\r\n        /*\r\n            axios.get('/ingredients.json')\r\n                .then (response => {\r\n                    this.setState({ingredients: response.data});\r\n                })\r\n                .catch (error => {\r\n                    this.setState({error: true});\r\n                });\r\n                */\r\n    }\r\n\r\n    ordernowToggle(updatedIng) {\r\n        let sum = Object.keys(updatedIng).reduce((acc, curr) => {\r\n            return acc + updatedIng[curr];\r\n        }, 0);\r\n        return sum > 0;\r\n    }\r\n\r\n    changeIngHandler = (ing, act) => {\r\n\r\n        // Managing state through Redux\r\n        act === 'add' ? this.props.addIng(ing) : this.props.delIng(ing);\r\n        this.props.changePrice(ing, act);\r\n        // this.ordernowToggle(this.props.ing);\r\n\r\n        /*\r\n            // Adding Ingredients\r\n            const ingCount = this.state.ingredients[ing];\r\n            const updatedCount = act === 'add' ? ingCount + 1 : ingCount - 1;\r\n            const updatedIng = {...this.state.ingredients};\r\n            updatedIng[ing] = updatedCount;\r\n            // Adding Updated Price\r\n            let ingPrice = this.state.totalPrice;\r\n            switch(ing) {\r\n                case('Bacon'): \r\n                    act === 'add' ? ingPrice += 0.9 : ingPrice -= 0.9;\r\n                    break;\r\n                case('Salad'): \r\n                    act === 'add' ? ingPrice += 0.3 : ingPrice -= 0.3;\r\n                    break;\r\n                case('Meat'): \r\n                    act === 'add' ? ingPrice += 1.1 : ingPrice -= 1.1;\r\n                    break;\r\n                case('Cheese'): \r\n                    act === 'add' ? ingPrice += 0.2 : ingPrice -= 0.2;\r\n                    break;\r\n                default: \r\n                    return ingPrice;\r\n            }\r\n            // Updating the State finally\r\n            ingPrice = ingPrice.toFixed(2);\r\n            this.setState({ingredients: updatedIng, totalPrice: ingPrice});\r\n            this.ordernowToggle(this.props.ing);\r\n        */\r\n    }\r\n\r\n    modalHandler = () => {\r\n        let x = this.state.modal;\r\n        this.setState({ modal: !x });\r\n    }\r\n\r\n\r\n    // Managing State through Redux\r\n    /*\r\n    // Passing ingredients in QueryParams\r\n    continueHandler = () => {\r\n        // Method 1: Created by Karan Uppal\r\n        // let ing = {...this.state.ingredients}\r\n        // this.props.history.push({\r\n        //     pathname: '/checkout',\r\n        //     search: '?' + Object.keys(ing).map(current => {\r\n        //                 return current + '=' + ing[current];\r\n        //             }).join('&') + '&price=' + this.state.totalPrice\r\n        // });\r\n\r\n        // Method 2: Created by Instructor\r\n        // const ing = {...this.state.ingredients};\r\n        // const queryParams = [];\r\n        // for(let i in ing) {\r\n        //     queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(ing[i]));\r\n        // };\r\n        // queryParams.push('price=' + encodeURIComponent(this.state.totalPrice));\r\n        // this.props.history.push({\r\n        //     pathname: '/checkout',\r\n        //     search: '?' + queryParams.join('&')\r\n        // });\r\n\r\n        //  Methode 3: (SHORTEST) Suggested by a Pupil\r\n        // this.props.history.push({\r\n        //     pathname: '/checkout',\r\n        //     search: new URLSearchParams(this.state.ingredients) +\r\n        //         '&price=' + this.state.totalPrice\r\n        // });\r\n    }\r\n   */\r\n\r\n    continueHandler = () => {\r\n        if (this.props.isAuth) {\r\n            this.props.history.push('/checkout')\r\n        }\r\n        else this.props.history.push('/login');\r\n    }\r\n\r\n    render() {\r\n\r\n        const disabledInfo = { ...this.props.ing };\r\n        for (let key in disabledInfo) {\r\n            if (disabledInfo[key] <= 0) disabledInfo[key] = true;\r\n            else disabledInfo[key] = false;\r\n        }\r\n\r\n\r\n        let burger = this.props.error ? <p style={{ fontSize: 'xx-large', color: '#ffb657' }}>Something went wrong. Please check your internet connection!</p> : <Spinner />;\r\n        let orderSummary = null;\r\n        if (this.props.ing) {\r\n            burger = (<Auxiliary>\r\n                <Burger ing={this.props.ing} />\r\n                <BuildControls\r\n                    ing={this.props.ing}\r\n                    changeIngHandler={this.changeIngHandler}\r\n                    isDisabled={disabledInfo}\r\n                    price={this.props.price}\r\n                    ordernow={this.ordernowToggle(this.props.ing)}\r\n                    modal={this.modalHandler}\r\n                    reset={this.props.reset}  // Used instead of RESET_ING() as to prevent spinner render loop\r\n                />\r\n            </Auxiliary>\r\n            );\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.props.ing}\r\n                price={this.props.price}\r\n                cancel={this.modalHandler}\r\n                continue={this.continueHandler}\r\n                isAuth={this.props.isAuth}\r\n            />\r\n        }\r\n\r\n\r\n        return (\r\n\r\n            <Auxiliary>\r\n                {/* <BackdropContext.Provider\r\n                                value={{show: this.state.modal, modalClosed: this.modalHandler}} > */}\r\n\r\n                <Modal show={this.state.modal} modalClosed={this.modalHandler}>\r\n\r\n                    {orderSummary}\r\n                    {/* This above method, triggers re-render cycle of OrderSummary with every\r\n                    CHANGE in ingredients' count, UNLESS we add \"type\" property to props.children\r\n                    of the Modal.js under shouldComponentUpdate(), for this to work. */}\r\n\r\n                    {/* {this.state.modal ? orderSummary : null} */}\r\n                    {/* This above method, doesn't even trigger re-render cycle of OrderSummary!\r\n                    STRANGE! And still works flawlessly.\r\n                    Although you need to remove \"type\" property from the props.children of Modal.js\r\n                    under shouldComponentUpdate(), for this to work. */}\r\n\r\n                </Modal>\r\n\r\n                {burger}\r\n\r\n                {/* </BackdropContext.Provider> */}\r\n            </Auxiliary>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ing: state.ing.ingredients,\r\n        error: state.ing.error,\r\n        price: state.price.totalPrice,\r\n        isAuth: state.auth.token !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addIng: (ing) => dispatch(actionCreators.addIng(ing)),\r\n        delIng: (ing) => dispatch(actionCreators.delIng(ing)),\r\n        changePrice: (ing, act) => dispatch(actionCreators.changePrice(ing, act)),\r\n        fetchIng: () => dispatch(actionCreators.fetchIng()),\r\n        reset: () => dispatch(actionCreators.reset()),\r\n        resetIng: () => dispatch(actionCreators.resetIng()),\r\n        resetPrice: () => dispatch(actionCreators.resetPrice())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { Input } from '../../components/UI/Input/Input';\r\nimport { checkValidity } from '../../components/UI/FormValidation/FormValidation';\r\nimport { Button } from '../../components/UI/Button/Button';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport axios from 'axios';\r\nimport * as actionCreators from '../../store/actions/';\r\nimport classes from './Auth.module.css';\r\nimport { Spinner } from '../../components/UI/Spinner/Spinner';\r\n\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        formIsValid: false,\r\n        loginForm: {\r\n            email: this.loginForm('input', 'email', 'e-mail', '', true),\r\n            password: this.loginForm('input', 'password', 'password', '', true),\r\n            keepMeLoggedin: this.loginForm('checkbox', '', 'keep me logged in?', '', null, 'yes')\r\n        }\r\n    }\r\n\r\n    loginForm(type, configType, configText, value, required, ...options) {\r\n        if (type !== 'input') {\r\n            return {\r\n                elementType: type,\r\n                elementConfig: {\r\n                    placeholder: configText,\r\n                    options: options.map(current => {\r\n                        return {\r\n                            value: current\r\n                        }\r\n                    })\r\n                },\r\n                value: value,\r\n                touched: false,\r\n            }\r\n        }\r\n\r\n        else {\r\n            return {\r\n                elementType: type,\r\n                elementConfig: {\r\n                    type: configType,\r\n                    placeholder: configText\r\n                },\r\n                value: value,\r\n                validation: {\r\n                    required: required,\r\n                    maxLength: 200,\r\n                    minLength: required ? 6 : null,\r\n                    emailCheck: configType === 'email',\r\n                    valid: false\r\n                },\r\n                touched: false,\r\n            }\r\n        }\r\n    }\r\n\r\n    changeHandler = (event, id) => {\r\n\r\n        let validation = null;\r\n        if (this.state.loginForm[id].validation) {\r\n            validation = {\r\n                ...this.state.loginForm[id].validation,\r\n                valid: checkValidity(event.target.value, this.state.loginForm[id].validation)\r\n            }\r\n        }\r\n\r\n        // Updating the state immutably\r\n        const updatedForm = {\r\n            ...this.state.loginForm,\r\n            [id]: {\r\n                ...this.state.loginForm[id],\r\n                value: event.target.value,\r\n                validation,\r\n                touched: true\r\n            }\r\n        }\r\n\r\n        // if (updatedForm[id].touched) this.props.loginErrorHandler(null);\r\n\r\n        let formIsValid = false;\r\n        formIsValid = Object.keys(updatedForm).map((curr) => {\r\n            if (updatedForm[curr].validation) {\r\n                return updatedForm[curr].validation.valid;\r\n            }\r\n            else return true;\r\n        })\r\n            .reduce((acc, curr) => {\r\n                return acc && curr;\r\n            });\r\n\r\n        this.setState({ loginForm: updatedForm, formIsValid });\r\n    }\r\n\r\n    loginHandler = (loginMode) => {\r\n        this.props.authHandler(\r\n            this.state.loginForm.email.value,\r\n            this.state.loginForm.password.value,\r\n            loginMode,\r\n            this.state.loginForm.keepMeLoggedin.value\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const style = { textAlign: 'center', color: 'red', fontSize: 'x-large', padding: '0 50px' };\r\n\r\n        let loginForm = [];\r\n        let form = null;\r\n        for (let key in this.state.loginForm) {\r\n            loginForm.push({\r\n                id: key,\r\n                config: this.state.loginForm[key]\r\n            });\r\n        }\r\n\r\n        form = loginForm.map(current => {\r\n            return (\r\n                <Input\r\n                    key={current.id}\r\n                    elementType={current.config.elementType}\r\n                    elementConfig={current.config.elementConfig}\r\n                    value={current.config.value}\r\n                    change={(event) => this.changeHandler(event, current.id)}\r\n                    label={current.config.elementConfig.placeholder}\r\n                    touched={current.config.touched}\r\n                    invalid={current.config.validation ? !current.config.validation.valid : null}\r\n                    error={this.props.error}\r\n                />\r\n            );\r\n        });\r\n\r\n        if (this.props.loader) form = (\r\n            <div>\r\n                <Spinner />\r\n                <p style={{ fontSize: 'xx-large', textAlign: 'center', color: '#ffb657' }}>\r\n                    Loading...\r\n                </p>\r\n            </div>\r\n        );\r\n\r\n        // let authRedirect = null;\r\n        // if(this.props.isAuth && (this.props.price > 2)) {\r\n        //     authRedirect = <Redirect to=\"/checkout\" />;\r\n        // }\r\n        // else if(this.props.isAuth) authRedirect = <Redirect to=\"/\" />;\r\n        let authRedirect = null;\r\n        if (this.props.isAuth) {\r\n            if (this.props.price > 2) {\r\n                authRedirect = <Redirect to=\"/checkout\" />;\r\n            }\r\n            else authRedirect = <Redirect to=\"/\" />;\r\n        }\r\n\r\n        return (\r\n            <div className={classes.Login}>\r\n                <form>\r\n                    {form}\r\n                    {this.props.error ? <p style={style}>{this.props.error}</p> : null}\r\n                </form>\r\n\r\n                <div className={classes.Button}>\r\n                    <Button\r\n                        disabled={!this.state.formIsValid}\r\n                        btnType=\"Success\"\r\n                        click={() => this.loginHandler('login')}\r\n                    >\r\n                        log-in\r\n                    </Button>\r\n                    <Button\r\n                        disabled={!this.state.formIsValid}\r\n                        btnType=\"Danger\"\r\n                        click={() => this.loginHandler('signup')}\r\n                    >\r\n                        sign-up\r\n                    </Button>\r\n                </div>\r\n\r\n                {authRedirect}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.token !== null,\r\n        loader: state.order.loader,\r\n        error: state.auth.error,\r\n        price: state.price.totalPrice\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authHandler: (email, password, loginMode, keepLoggedIn) => dispatch(actionCreators.authHandler(email, password, loginMode, keepLoggedIn))\r\n        // loginErrorHandler: (error) => dispatch(actionCreators.loginErrorHandler(error))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Auth, axios));","import React, { Component } from 'react';\r\nimport * as actionCreators from '../../../store/actions';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { Spinner } from '../../../components/UI/Spinner/Spinner';\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.authLogoutHandler(2);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ fontSize: 'xxx-large', textAlign: 'center', color: '#ffb657' }} >\r\n                <p>\r\n                    You have been successfully logged-out!\r\n                </p>\r\n                <p style={{ fontSize: 'xx-large' }}>\r\n                    Redirecting to burger builder...\r\n                </p>\r\n                <Spinner />\r\n                {this.props.isAuth ? null : <Redirect to=\"/\" />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.token !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authLogoutHandler: (time) => dispatch(actionCreators.authLogoutHandler(time))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\r\n\r\nconst AsyncComponent = (importedComponent) => {\r\n    return class extends Component {\r\n        state = {\r\n            component: null\r\n        }\r\n\r\n        componentDidMount() {\r\n            importedComponent()\r\n                .then(response => {\r\n                    this.setState({ component: response.default });\r\n                });\r\n        }\r\n\r\n        render() {\r\n            const Comp = this.state.component;\r\n            return Comp ? <Comp {...this.props} /> : null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default AsyncComponent;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { Auxiliary } from '../../hoc/Auxiliary'\r\nimport classes from './Layout.module.css'\r\nimport { Toolbar } from '../Navigation/Toolbar/Toolbar'\r\nimport { SideDrawer } from '../Navigation/SideDrawer/SideDrawer';\r\nimport BurgerBuilder from '../../containers/BurgerBuilder/BurgerBuilder';\r\n// import Checkout from '../../containers/Checkout/Checkout';\r\n// import Orders from '../../containers/Orders/Orders';\r\nimport Auth from '../../containers/Auth/Auth';\r\nimport Logout from '../../containers/Auth/Logout/Logout';\r\nimport AsyncComponent from '../../hoc/asyncComponent';\r\n\r\nconst AsyncCheckout = AsyncComponent(() => import('../../containers/Checkout/Checkout'));\r\nconst AsyncOrders = AsyncComponent(() => import('../../containers/Orders/Orders'));\r\n\r\nconst Layout = (props) => {\r\n\r\n    const [backdropToggle, setBackdropToggle] = useState(false);\r\n\r\n    const backdropHandler = () => {\r\n        let x = backdropToggle;\r\n        setBackdropToggle(!x);\r\n    }\r\n\r\n    let route = (\r\n        <Switch>\r\n            <Route path=\"/\" exact component={BurgerBuilder} />\r\n            {/* <Route path=\"/checkout\" component={Checkout} /> */}\r\n            {/* <Route path=\"/orders\" component={Orders} /> */}\r\n            <Route path=\"/login\" component={Auth} />\r\n            {/* <Route path=\"/logout\" component={Logout} /> */}\r\n            <Redirect to =\"/\" />\r\n        </Switch>\r\n    );\r\n\r\n    if (props.isAuth) route = (\r\n        <Switch>\r\n            <Route path=\"/\" exact component={BurgerBuilder} />\r\n            <Route path=\"/checkout\" component={AsyncCheckout} />\r\n            <Route path=\"/orders\" component={AsyncOrders} />\r\n            <Route path=\"/login\" component={Auth} />\r\n            <Route path=\"/logout\" component={Logout} />\r\n            <Redirect to =\"/\" />\r\n        </Switch>\r\n    );\r\n\r\n    return (\r\n        <Auxiliary>\r\n            <Toolbar click={backdropHandler} />\r\n            <SideDrawer toggle={backdropToggle} click={backdropHandler} />\r\n            <div className={classes.Context}></div>\r\n            <main className={classes.Context}>\r\n                {props.children}\r\n            </main>\r\n            {route}\r\n        </Auxiliary>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.token !== null\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport Layout from './components/Layout/Layout';\nimport * as actionCreators from './store/actions';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.autoAuthHandler();\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        {/* <BrowserRouter basename=\"https://killswitch74.github.io/burger-builder\"> */}\n        <BrowserRouter>\n          <Layout />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    autoAuthHandler: () => dispatch(actionCreators.autoAuthHandler())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(App);","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    error: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case actionTypes.FETCH_ING:\r\n            return {\r\n                ...state,\r\n                ingredients: action.data,\r\n                error: false\r\n            }\r\n\r\n        case actionTypes.FETCH_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n\r\n        case actionTypes.ADD_ING:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ing]: state.ingredients[action.ing] + 1\r\n                }\r\n            }\r\n        case actionTypes.DEL_ING:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ing]: state.ingredients[action.ing] - 1\r\n                }\r\n            }\r\n        case actionTypes.RESET:\r\n            const store = Object.assign({}, state);\r\n            store.ingredients = { ...state.ingredients };\r\n            Object.keys(store.ingredients).forEach(current => {\r\n                store.ingredients[current] = 0;\r\n            });\r\n            return store;\r\n            \r\n        case actionTypes.RESET_ING:\r\n            return {\r\n                ...state,\r\n                ingredients: null\r\n            }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    totalPrice: 2\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    let ingPrice = state.totalPrice;\r\n    if (action.type === actionTypes.CHANGE_PRICE) {\r\n        switch (action.ing) {\r\n            case ('Bacon'):\r\n                action.act === 'add' ? ingPrice += 0.9 : ingPrice -= 0.9;\r\n                return {\r\n                    ...state,\r\n                    // ingredients: {...state.ingredients},\r\n                    totalPrice: +ingPrice.toFixed(2)\r\n                }\r\n            case ('Salad'):\r\n                action.act === 'add' ? ingPrice += 0.3 : ingPrice -= 0.3;\r\n                return {\r\n                    ...state,\r\n                    totalPrice: +ingPrice.toFixed(2)\r\n                }\r\n            case ('Meat'):\r\n                action.act === 'add' ? ingPrice += 1.1 : ingPrice -= 1.1;\r\n                return {\r\n                    ...state,\r\n                    totalPrice: +ingPrice.toFixed(2)\r\n                }\r\n            case ('Cheese'):\r\n                action.act === 'add' ? ingPrice += 0.2 : ingPrice -= 0.2;\r\n                return {\r\n                    ...state,\r\n                    totalPrice: +ingPrice.toFixed(2)\r\n                }\r\n            default: return state;\r\n        }\r\n    }\r\n\r\n    else if (action.type === actionTypes.RESET_PRICE || action.type === actionTypes.RESET) {\r\n        return {\r\n            ...state,\r\n            totalPrice: 2\r\n        }\r\n    }\r\n\r\n    else return state;\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    error: false,\r\n    loader: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SUBMIT_ORDER:\r\n            return {\r\n                ...state,\r\n                orders: state.orders.concat({ id: action.id, ...action.order }),\r\n                loader: false,\r\n                error: false\r\n            }\r\n        case actionTypes.ERROR:\r\n            return {\r\n                ...state,\r\n                loader: false,\r\n                error: true\r\n            }\r\n        case actionTypes.LOADER:\r\n            return {\r\n                ...state,\r\n                loader: action.loader\r\n            }\r\n        case actionTypes.FETCH_ORDERS:\r\n            return {\r\n                ...state,\r\n                loader: false,\r\n                orders: action.orders\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userID: null,\r\n    error: null\r\n}\r\n\r\nconst errorMessageHandler = (state, action) => {\r\n    let errorMessage = null;\r\n    switch (action.error) {\r\n        case 'EMAIL_NOT_FOUND': errorMessage = 'E-mail address does not exists! Please try signing-up instead.';\r\n            break;\r\n        case 'INVALID_PASSWORD': errorMessage = 'Incorrect Password! Please check the password and try again.';\r\n            break;\r\n        case 'INVALID_EMAIL': errorMessage = 'Incorrect E-mail address! Please enter valid e-mail address and try again.';\r\n            break;\r\n        case 'EMAIL_EXISTS': errorMessage = 'E-mail address already exists! Please try logging-in instead.';\r\n            break;\r\n        case 'TOO_MANY_ATTEMPTS_TRY_LATER': errorMessage = 'Too many failed attempts! Please try later.';\r\n            break;\r\n        default: errorMessage = state.error;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        error: errorMessage\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOGIN_ERROR_STATE:\r\n            return errorMessageHandler(state, action);\r\n        case actionTypes.AUTH_HANDLER:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                token: action.token,\r\n                userID: action.userID\r\n            }\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                userID: null\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport ingReducer from './store/reducers/ingReducer';\nimport priceReducer from './store/reducers/priceReducer';\nimport orderReducer from './store/reducers/orderReducer';\nimport authReducer from './store/reducers/authReducer';\n\nconst rootReducer = combineReducers({\n  ing: ingReducer,\n  price: priceReducer,\n  order: orderReducer,\n  auth: authReducer\n});\n\n// Following NODE_ENV variable is a enviroment variable which is 'development' if we are in 'development' mode.\n// We then check if we are in development then only we can access the Redux DevTools otherwise it should not be accessible.\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n// composeEnhancers, on the other-hand, is responsible for integrating Redux DevTools in our project to read data (state and actions).  \n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}