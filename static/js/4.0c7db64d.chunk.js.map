{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","props","ing","ingName","ingredients","push","name","amount","ingRender","map","current","key","className","classes","OrderEl","style","color","fontFamily","price","toFixed","Orders","this","fetchOrders","fontSize","loader","Spinner","orders","id","Component","connect","state","order","dispatch","actionCreators","WithErrorHandler","axios"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,yB,kHCE5CC,EAAQ,SAACC,GAElB,IAAMC,EAAM,GACZ,IAAI,IAAIC,KAAWF,EAAMG,YACrBF,EAAIG,KAAK,CACLC,KAAMH,EACNI,OAAQN,EAAMG,YAAYD,KAIlC,IAAMK,EAAYN,EAAIO,KAAI,SAAAC,GACtB,OAA2B,IAAnBA,EAAQH,OAAe,KACrB,0BACEI,IAAOD,EAAQJ,KACfM,UAAWC,IAAQC,SACrBJ,EAAQJ,KAHR,IAIF,0BAAMS,MAAO,CAACC,MAAO,QAArB,IAA+BN,EAAQH,YAInD,OACI,yBAAKK,UAAWC,IAAQb,OACpB,0CAAgBQ,GAChB,uBAAGO,MAAO,CAACE,WAAY,qBAAvB,eACI,qCAAWhB,EAAMiB,MAAMC,QAAQ,O,+BCnBzCC,E,kLAGEC,KAAKpB,MAAMqB,gB,+BAKX,OACI,6BACI,uBAAGP,MAAO,CAACQ,SAAU,cAArB,aACCF,KAAKpB,MAAMuB,OAAS,kBAACC,EAAA,EAAD,MACfJ,KAAKpB,MAAMyB,OAAOjB,KAAI,SAAAC,GACpB,OAAO,kBAAC,EAAD,CACHC,IAAKD,EAAQiB,GACbvB,YAAaM,EAAQN,YACrBc,MAAOR,EAAQQ,gB,GAhBtBU,aAsCNC,uBAbS,SAAAC,GACpB,MAAO,CACHJ,OAAQI,EAAMC,MAAML,OACpBF,OAAQM,EAAMC,MAAMP,WAID,SAAAQ,GACvB,MAAO,CACHV,YAAa,kBAAMU,EAASC,WAIrBJ,CAA6CK,YAAiBd,EAAQe","file":"static/js/4.0c7db64d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__2MxEX\",\"OrderEl\":\"Order_OrderEl__e9-u5\"};","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nexport const Order = (props) => {\r\n    \r\n    const ing = [];\r\n    for(let ingName in props.ingredients) {\r\n        ing.push({\r\n            name: ingName,\r\n            amount: props.ingredients[ingName]\r\n        });\r\n    }\r\n\r\n    const ingRender = ing.map(current => {\r\n        return  current.amount === 0 ? null\r\n                : <span\r\n                    key = {current.name}\r\n                    className={classes.OrderEl}\r\n                >{current.name}: \r\n                <span style={{color: 'red'}}> {current.amount}</span></span>\r\n            \r\n    });\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients:{ingRender}</p>\r\n            <p style={{fontFamily: 'Ubuntu Condensed'}}>Total Price:\r\n                <strong> ${props.price.toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Order } from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport { Spinner } from '../../components/UI/Spinner/Spinner';\r\nimport WithErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actionCreators from '../../store/actions';\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchOrders();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <p style={{fontSize: 'xxx-large'}}>My Orders</p>\r\n                {this.props.loader ? <Spinner />\r\n                    : this.props.orders.map(current => {\r\n                        return <Order\r\n                            key={current.id}\r\n                            ingredients={current.ingredients}\r\n                            price={current.price}\r\n                        />\r\n                    })}\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loader: state.order.loader\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchOrders: () => dispatch(actionCreators.fetchOrders())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WithErrorHandler(Orders, axios));"],"sourceRoot":""}